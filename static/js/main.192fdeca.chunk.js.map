{"version":3,"sources":["components/Button/index.js","components/Button/Button.js","components/Card/index.js","components/Card/Card.js","components/Title/index.js","components/Title/Title.js","Pages/Home/components/Instructions/Instructions.js","Pages/Home/components/Instructions/index.js","Pages/Home/components/Home/Home.js","Pages/Home/index.js","Pages/Quiz/components/QuestionBank/index.js","Pages/Quiz/components/QuestionBank/QuestionBank.js","Pages/Quiz/components/Answers/Answers.js","Pages/Quiz/components/Answers/index.js","Pages/Quiz/components/Questions/Questions.js","Pages/Quiz/components/Questions/index.js","Pages/Quiz/components/Quiz/Quiz.js","Pages/Quiz/index.js","Pages/Error/Error.js","Pages/Error/index.js","App.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","Card","div","Title","h1","Instruction","li","InstructionsTitle","StyledInstructions","ul","InstructionsCard","Instructions","HomeContainer","HomeCard","StartButton","LineBreak","br","Home","to","QuestionBank","id","question","answerOptions","text","isCorrect","AnswerCard","StyledAnswers","Answer","AnswerButton","Answers","props","map","currentQuestion","options","onClick","handleClick","QuestionCard","QuestionTitle","Question","h3","Questions","questionId","length","questionText","QuizContainer","QuizCard","QuestionAnswer","QuitButton","Quiz","display","useState","setCurrentQuestion","score","setScore","ErrorContainer","ErrorCard","ErrorTitle","HomeButton","Error","location","useLocation","pathname","App","className","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.192fdeca.chunk.js","sourcesContent":["import Button from './Button.js'\r\n\r\nexport default Button;","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n    margin: 0 auto;\r\n    color: black;\r\n    background-color: white;\r\n    border: 2px solid black;\r\n    border-radius: 5px;\r\n    font-size: 1em;\r\n    margin: 1em;\r\n    padding: 0.25em 1em;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport default Button;","import Card from './Card'\r\n\r\nexport default Card;","import styled from 'styled-components';\r\n\r\nconst Card = styled.div`\r\n    margin: 0 auto;\r\n    width: 600px;\r\n    height: 500px;\r\n`;\r\n\r\nexport default Card;","import Title from './Title'\r\n\r\nexport default Title;","import styled from 'styled-components';\r\n\r\nconst Title = styled.h1`\r\n    color: #000000;\r\n    text-align: center;\r\n`;\r\n\r\nexport default Title;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Card } from '../../../../components';\r\nimport Title from '../../../../components/Title';\r\n\r\n\r\nconst Instruction = styled.li`\r\n    font-size: 1em;\r\n`;\r\n\r\nconst InstructionsTitle = styled(Title)`\r\n    font-size: 1.5em;\r\n    color: #00328C;\r\n    text-decoration: underline;\r\n`;\r\n\r\nconst StyledInstructions = styled.ul`\r\n    list-style-type: disc;\r\n    line-height: 2.2;\r\n`;\r\n\r\nconst InstructionsCard = styled(Card)`\r\n    width: 500px;\r\n    height: 250px;\r\n    color: #000000;\r\n    background-color: #F5E205;\r\n    text-align: left;\r\n`;\r\n\r\nconst Instructions = () => {\r\n    return(\r\n        <InstructionsCard>\r\n            <InstructionsTitle>Instructions</InstructionsTitle>\r\n            <StyledInstructions>\r\n                <Instruction>There will be a total of 4 questions to answer.</Instruction>\r\n                <Instruction>Each question will have 4 answer options to choose from.</Instruction>\r\n                <Instruction>Each righ answer you choose will award you one point.</Instruction>\r\n                <Instruction>There is no negative points for wrong answers.</Instruction>\r\n                <Instruction>There is no time limit to answer the questions.</Instruction>\r\n            </StyledInstructions>\r\n        </InstructionsCard>\r\n    )\r\n}\r\n\r\nexport default Instructions;","import Instructions from './Instructions'\r\n\r\nexport default Instructions;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card } from '../../../../components';\r\nimport Instructions from '../Instructions';\r\nimport Title from '../../../../components/Title';\r\n\r\nconst HomeContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 600px;\r\n`;\r\n\r\nconst HomeCard = styled(Card)`\r\n    background-color: #D5CAE3;\r\n`;\r\n\r\nconst StartButton = styled(Button)`\r\n    padding: 10px 15px;\r\n    border-color: #FFFFFF;\r\n    color: #FFFFFF;\r\n    background-color: #49D65F;\r\n    &:hover{\r\n        border-color: #D5CAE3;\r\n        color: #49D65F;\r\n        background-color: #FFFFFF;\r\n    }\r\n`;\r\n\r\nconst LineBreak = styled.br``;\r\n\r\nconst Home = () => {\r\n    return(\r\n        <HomeContainer>\r\n            <HomeCard>\r\n                <Title>Cricket Quiz App</Title>\r\n                <LineBreak />\r\n                <Instructions />\r\n                <LineBreak />\r\n                <Link to=\"/quiz\">\r\n                    <StartButton>Start</StartButton>\r\n                </Link>\r\n            </HomeCard>\r\n        </HomeContainer>\r\n    )\r\n}\r\n\r\nexport default Home;","import Home from './components/Home'\r\n\r\nexport default Home;","import QuestionBank from './QuestionBank'\r\n\r\nexport default QuestionBank;","const QuestionBank = [\r\n    {   id: 0, \r\n        question: 'Who is the first player to play the finals of all ICC events(including WTC)?',\r\n        answerOptions: [\r\n            {text: 'Rahul Dravid', isCorrect: false},\r\n            {text: 'Ricky Ponting', isCorrect: false},\r\n            {text: 'Kane Williamson', isCorrect: false},\r\n            {text: 'Virat Kohli', isCorrect: true},\r\n        ]\r\n    },\r\n    {   id: 1, \r\n        question: 'Who holds the record for the fastest ODI century?',\r\n        answerOptions: [\r\n            {text: 'Chris Gayle', isCorrect: false},\r\n            {text: 'David Warner', isCorrect: false},\r\n            {text: 'AB de villiers', isCorrect: true},\r\n            {text: 'Hardik Pandya', isCorrect: false},\r\n        ]\r\n    },\r\n    {   id: 2, \r\n        question: 'Who was the first player in international cricket to hit six sixes in an over?',\r\n        answerOptions: [\r\n            {text: 'Kieron Pollard', isCorrect: false},\r\n            {text: 'Yuvraj Singh', isCorrect: false},\r\n            {text: 'Herschelle Gibbs', isCorrect: true},\r\n            {text: 'Ravi Shastri', isCorrect: false},\r\n        ]\r\n    },\r\n    {   id: 3, \r\n        question: 'Who was awarded Man of the match in the finals of Inaugural edition of IPL?',\r\n        answerOptions: [\r\n            {text: 'Yusuf Phatan', isCorrect: true},\r\n            {text: 'Shane Watson', isCorrect: false},\r\n            {text: 'Ravindra Jadeja', isCorrect: false},\r\n            {text: 'Shane Warne', isCorrect: false},\r\n        ]\r\n    }\r\n]\r\n\r\nexport default QuestionBank;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Card } from '../../../../components';\r\nimport QuestionBank from '../QuestionBank';\r\n\r\nconst AnswerCard = styled(Card)`\r\n    width: 250px;\r\n    height: 220px;\r\n    background-color: #E1E077;\r\n`;\r\n\r\nconst StyledAnswers = styled.ul`\r\n    list-style-type: none;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Answer = styled.li`\r\n    font-size: 0.8em;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst AnswerButton = styled(Button)`\r\n    width: 150px;\r\n    padding: 5px;\r\n    &:hover{\r\n        color: #FFFFFF;\r\n        background-color: #000000;\r\n    }\r\n`;\r\n\r\nconst Answers = props => {\r\n    return(\r\n        <AnswerCard>\r\n            <StyledAnswers>\r\n                {QuestionBank.map((question) => {\r\n                    if(question.id === props.currentQuestion){\r\n                        return question.answerOptions.map((options) =>\r\n                            <Answer key={options.text}>\r\n                                <AnswerButton onClick={() => props.handleClick(options.isCorrect)}>\r\n                                    {options.text}\r\n                                </AnswerButton>\r\n                            </Answer>\r\n                            )\r\n                        }\r\n                    return null;\r\n                    })\r\n                }\r\n            </StyledAnswers>\r\n        </AnswerCard>\r\n    )\r\n}\r\n\r\nexport default Answers;","import Answers from './Answers'\r\n\r\nexport default Answers;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport QuestionBank from '../QuestionBank';\r\nimport { Card, Title } from '../../../../components';\r\n\r\nconst QuestionCard = styled(Card)`\r\n    width: 250px;\r\n    height: 220px;\r\n    background-color: #D4C7BC;\r\n    color: #000000;\r\n`;\r\n\r\nconst QuestionTitle = styled(Title)`\r\n    font-size: 1.5em;\r\n    color: #000000;\r\n`;\r\n\r\nconst Question = styled.h3`\r\n    font-size: 1em;\r\n`; \r\n\r\nconst Questions = props => {\r\n    return(\r\n        <QuestionCard>\r\n            <QuestionTitle>Question  \r\n                {QuestionBank.map((question) => {\r\n                    let questionId;\r\n                    if(question.id === props.currentQuestion){\r\n                        questionId = question.id + 1;\r\n                    }\r\n                    return questionId;\r\n                })}/{QuestionBank.length} \r\n            </QuestionTitle>\r\n            <Question>\r\n                {QuestionBank.map((question) => {\r\n                    let questionText;\r\n                    if(question.id === props.currentQuestion){\r\n                        questionText = question.question;\r\n                    }\r\n                    return questionText;\r\n                })}\r\n            </Question>\r\n        </QuestionCard>\r\n    )\r\n}\r\n\r\nexport default Questions;\r\n\r\n","import Questions from './Questions'\r\n\r\nexport default Questions;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card, Title } from '../../../../components';\r\nimport Answers from '../Answers';\r\nimport Questions from '../Questions';\r\n\r\nconst QuizContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 600px;\r\n`;\r\n\r\nconst QuizCard  = styled(Card)`\r\n    background-color: #21ADFF;\r\n`;\r\n\r\nconst QuestionAnswer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst QuitButton = styled(Button)`\r\n    padding: 10px 15px;\r\n    color: #DB302A;\r\n    border-color: #DB302A;\r\n    background-color: #FFFFFF;\r\n    &:hover{\r\n        border-color: #21ADFF;\r\n        color: #FFFFFF;\r\n        background-color: #DB302A;\r\n    }\r\n`;\r\n\r\nconst LineBreak = styled.br``;\r\n\r\nconst Quiz = () => {\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    \r\n    const handleClick = isCorrect => {\r\n        setCurrentQuestion(currentQuestion + 1);\r\n        if(isCorrect)\r\n            setScore(score + 1);\r\n    }\r\n\r\n    let display;\r\n\r\n    if(currentQuestion !== 4){\r\n        display = (\r\n            <QuestionAnswer>\r\n                <Questions currentQuestion={currentQuestion} />\r\n                <Answers currentQuestion={currentQuestion} handleClick={handleClick}/>\r\n            </QuestionAnswer>);\r\n    }\r\n    else{\r\n        display = (\r\n            <>\r\n                <Title>Quiz Over</Title>\r\n                <LineBreak />\r\n                <Title>You scored {score} point(s)</Title>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <QuizContainer>\r\n            <QuizCard>\r\n                <Title>Cricket Quiz App</Title>\r\n                <LineBreak />\r\n                <LineBreak />\r\n                {display}\r\n                <LineBreak />\r\n                <LineBreak />\r\n                <Link to=\"/\">\r\n                    <QuitButton>Quit</QuitButton>\r\n                </Link>\r\n            </QuizCard>\r\n        </QuizContainer>\r\n    )\r\n}\r\n\r\nexport default Quiz;\r\n\r\n","import Quiz from './components/Quiz'\r\n\r\nexport default Quiz;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Button, Card, Title } from '../../components';\r\n\r\nconst ErrorContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 600px;\r\n`;\r\n\r\nconst ErrorCard = styled(Card)`\r\n    background-color: #E6272E;\r\n`;\r\n\r\nconst ErrorTitle = styled(Title)`\r\n    color: #FFFFFF;\r\n`;\r\n\r\nconst HomeButton = styled(Button)`\r\n    padding: 10px 15px;\r\n    border-color: #FFFFFF;\r\n    color: #FFFFFF;\r\n    background-color: #49D65F;\r\n    &:hover{\r\n        border-color: #D5CAE3;\r\n        color: #49D65F;\r\n        background-color: #FFFFFF;\r\n    }\r\n`;\r\n\r\nconst LineBreak = styled.br``;\r\n\r\nconst Error = () => {\r\n    let location = useLocation();\r\n    return(\r\n        <ErrorContainer>\r\n            <ErrorCard>\r\n                <LineBreak />\r\n                <LineBreak />\r\n                <ErrorTitle>\r\n                    No match for <code>{location.pathname}</code>\r\n                </ErrorTitle>\r\n                <LineBreak />\r\n                <Link to=\"/\">\r\n                    <HomeButton>Home</HomeButton>\r\n                </Link>\r\n            </ErrorCard> \r\n        </ErrorContainer>\r\n    );\r\n}\r\n\r\nexport default Error;","import Error from './Error'\r\n\r\nexport default Error;","import { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './Pages/Home'\nimport Quiz from './Pages/Quiz';\nimport Error from './Pages/Error';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n        <Route path=\"/quiz\">\n          <Quiz />\n        </Route>\n        <Route path=\"*\">\n          <Error />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}